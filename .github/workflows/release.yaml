name: Create Release

# on:
#   pull_request:
#     branches:
#       - 'main'
#     types:
#       - closed

on:
  push:
    branches:
      - 'main'

jobs:
  create-release:
    permissions: write-all
    name: Create Release
    #if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Taking the Latest Release Tag number
        id: release_tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_tag_json=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/omilovskiy/auto-versioning/tags)
          latest_tag=$(echo "$latest_tag_json" | jq -r '.[0].name')
          echo "latest_tag: Latest Tag is : $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest pre release id
        id: latest_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_release=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/omilovskiy/auto-versioning/releases/tags/${{ steps.release_tag.outputs.latest_tag }})
          
          release_id=$(echo "$latest_release" | jq -r '.id')
          
          echo "release_id=$release_id" >> $GITHUB_OUTPUT

      - name: Set pre release to latest
        env: 
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/omilovskiy/auto-versioning/releases/${{ steps.latest_release.outputs.release_id }} \
          -F draft=false \
          -F prerelease=false \
          -F make_latest=true
